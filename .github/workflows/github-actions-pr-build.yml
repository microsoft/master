name: Pull Request Build
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
    branches: [main, release/*]
  push:
    branches: [user/pavignol/add-pr-test-pass]
concurrency:
  group: pr-build-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build-manylinux:
    name: Build x64-linux-release-cp37
    runs-on: ubuntu-latest
    container:
      image: tensorflow/tensorflow:2.5.0-custom-op-ubuntu16
    steps:
      - uses: actions/checkout@v2
      - name: Install CMake
        run: |
          wget --output-document="/tmp/cmake.sh" https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.sh
          mkdir "/tmp/cmake"
          bash "/tmp/cmake.sh" --skip-license --prefix="/tmp/cmake"
          echo "/tmp/cmake/bin:${PATH}" >> $GITHUB_PATH
      - name: Install Ninja
        run: |
          apt update
          apt install ninja-build -y
      - name: Install Miniconda
        run: |
          wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh --directory-prefix /tmp
          bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /tmp/miniconda3
          eval "$(/tmp/miniconda3/bin/conda shell.bash hook)"
          conda create --name build python=3.7 -y
          conda activate build
          pip install wheel
      - name: Build
        run: |
          export CXX=/usr/bin/clang++-8
          eval "$(/tmp/miniconda3/bin/conda shell.bash hook)"
          conda activate build
          python build.py --config release
      - name : Upload Wheel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.head_ref }}-${{ github.sha }}-x64-linux-release-cp37
          path: /__w/tensorflow-directml-plugin/tensorflow-directml-plugin/build/tensorflow_directml_plugin-0.0.1-cp37-cp37-linux_x86_64.whl
          retention-days: 1
          if-no-files-found: error
      - name: Test
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: https://dev.azure.com/microsoft/WindowsAI
          azure-pipeline-name: 'TF2 PR Test'
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
          azure-pipeline-variables: '{"platform": "linux", "artifact": "x64-linux-release-cp37", "artifactPath": "https://api.github.com/repos/microsoft/tensorflow-directml-plugin/actions/artifacts/${{ github.head_ref }}-${{ github.sha }}-x64-linux-release-cp37"}'
  build-windows-latest:
    name: Build x64-win-release-cp37
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install CMake
        shell: pwsh
        run: |
          $Url = 'https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-windows-x86_64.zip'
          $DownloadPath = "$env:TEMP/cmake.zip"
          (New-Object System.Net.WebClient).DownloadFile($Url, $DownloadPath)
          Expand-Archive $DownloadPath -DestinationPath cmake
          "$env:TEMP/cmake-3.22.1-windows-x86_64/bin" >> $env:GITHUB_PATH
      - name: Download Miniconda
        shell: pwsh
        run: |
          $Url = 'https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe'
          $DownloadPath = "$env:TEMP/miniconda.exe"
          (New-Object System.Net.WebClient).DownloadFile($Url, $DownloadPath)
      - name: Install Miniconda
        shell: cmd
        run: |
          %TEMP%\miniconda.exe /NoRegistry=1 /InstallationType=JustMe /RegisterPython=0 /S /D=%TEMP%\miniconda3
      - name: Create Miniconda Environment
        shell: pwsh
        run: |
          & "$env:TEMP/miniconda3/shell/condabin/conda-hook.ps1"
          conda create --name build python=3.7 -y
          conda activate build
          pip install wheel vswhere
      - name: Build
        shell: pwsh
        run: |
          & "$env:TEMP/miniconda3/shell/condabin/conda-hook.ps1"
          conda activate build
          python build.py --config release
      - name : Upload Wheel
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.head_ref }}-${{ github.sha }}-x64-win-release-cp37
          path: /__w/tensorflow-directml-plugin/tensorflow-directml-plugin/build/tensorflow_directml_plugin-0.0.1-cp37-cp37-win_amd64.whl
          retention-days: 1
          if-no-files-found: error
      - name: Test
        uses: Azure/pipelines@v1.2
        with:
          azure-devops-project-url: https://dev.azure.com/microsoft/WindowsAI
          azure-pipeline-name: 'TF2 PR Test'
          azure-devops-token: ${{ secrets.AZURE_DEVOPS_TOKEN }}
          azure-pipeline-variables: '{"platform": "windows", "artifact": "x64-win-release-cp37", "artifactPath": "https://api.github.com/repos/microsoft/tensorflow-directml-plugin/actions/artifacts/${{ github.head_ref }}-${{ github.sha }}-x64-win-release-cp37"}'
