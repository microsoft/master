# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.

name: $(Date:yyMMdd-HHmm)$(Rev:.r).$(SourceBranchName)

# No CI trigger; run on a schedule only.
trigger: none

# Do not trigger on PRs.
pr: none

parameters:
- name: releaseBuild
  displayName: Release Build
  type: boolean
  default: false

# Uploads artifacts to blob storage to be ushered to network share. Generally this should only be enabled for master
# and release branches.
- name: blobStorageDropEnabled
  displayName: Submit artifacts to blob storage
  type: boolean
  default: false # NOTE: scheduled runs on master/release branches will implicitly set this to true

- name: buildArtifacts
  displayName: Build Artifacts
  type: object
  default:
  - x64-win-release-cp37
  - x64-win-debug-cp37
  - x64-win-release-cp38
  - x64-win-release-cp39
  - x64-linux-release-cp37
  - x64-linux-debug-cp37
  - x64-linux-release-cp38
  - x64-linux-release-cp39

- name: testArtifacts
  displayName: Test Artifacts
  type: object
  default: [x64-win-release-cp37, x64-linux-release-cp37]

- name: testGroups
  displayName: Test Groups
  type: object
  default: [ops, plugin]

- name: testTensorflowPackage
  displayName: TensorFlow Package Version
  type: string
  default: tf-nightly-cpu==2.9.0.dev20220223

- name: testKerasPackage
  displayName: TensorFlow Package Version
  type: string
  default: keras-nightly==2.9.0.dev2022010508

- name: enableTests
  displayName: Enable Tests
  type: boolean
  default: true

- name: emailTo
  displayName: Email Results To
  type: string
  default: $(emailTo) # the default is stored in the pipeline as a variable

# CAREFUL: remember that variables are always string to string mappings. Unlike boolean-typed 
# parameters, they must be compared to 'True' or 'False' in expressions or they will be 
# implicitly cast: empty string -> false, any other string -> true.
#
# Variables with the same name as a parameter should always be preferred: this is to work around
# the limitation that default parameter values cannot use expressions.
variables:
  isScheduledRun: ${{eq(variables['Build.Reason'], 'schedule')}}
  isMasterBranch: ${{eq(variables['Build.SourceBranch'], 'refs/heads/master')}}
  isReleaseBranch: ${{startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')}}
  isMasterOrReleaseBranch: ${{or(eq(variables.isMasterBranch, 'True'), eq(variables.isReleaseBranch, 'True'))}}
  isScheduledRunOnMasterOrReleaseBranch: ${{and(eq(variables.isScheduledRun, 'True'), eq(variables.isMasterOrReleaseBranch, 'True'))}}
  blobStorageDropEnabled: ${{or(parameters.blobStorageDropEnabled, eq(variables.isScheduledRunOnMasterOrReleaseBranch, 'True'))}}

# For building manylinux2010-compliant Linux wheels:
# resources:
#   containers:
#   - container: manylinux
#     image: tensorflow/tensorflow:2.3.0-custom-op-ubuntu16

stages:
- stage: buildStage
  displayName: Build
  jobs:
  - ${{each artifact in parameters.buildArtifacts}}:
    - template: build.yml
      parameters:
        artifact: ${{artifact}}
        releaseBuild: ${{parameters.releaseBuild}}
        # ${{if eq(variables.blobStorageDropEnabled, 'True') }}:
        #   addToBlobStorage: true

- ${{if parameters.enableTests}}:
  - stage: testStage
    displayName: Test
    dependsOn: buildStage
    jobs:
    - template: test.yml
      parameters:
        testGroups: ${{parameters.testGroups}}
        artifacts: ${{parameters.testArtifacts}}
        tensorflowPackage: ${{parameters.testTensorflowPackage}}
        kerasPackage: ${{parameters.testKerasPackage}}

- stage: reportStage
  displayName: Report Results
  ${{if parameters.enableTests}}:
    dependsOn: [buildStage, testStage]
  ${{if not(parameters.enableTests)}}:
    dependsOn: [buildStage]
  condition: succeededOrFailed()
  pool: DirectML_TF2_Windows_Pool
  jobs:
  - template: report.yml
    parameters:
      emailTo: ${{parameters.emailTo}}
